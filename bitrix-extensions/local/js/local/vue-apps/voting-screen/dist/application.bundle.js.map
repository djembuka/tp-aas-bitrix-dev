{"version":3,"file":"application.bundle.js","sources":["../src/stores/data.js","../src/stores/controls.js","../src/components/status-timer.js","../src/components/graph-component.js","../src/components/list-component.js","../src/components/answer-component.js","../src/components/result-component.js","../src/components/application.js","../src/loader.js"],"sourcesContent":["import { defineStore } from 'ui.vue3.pinia';\r\n\r\nexport const dataStore = defineStore('data', {\r\n  state: () => ({\r\n    customData: {},\r\n    signedParameters: '',\r\n    \r\n    lang: {\r\n\t\t\tmessageSuccess: 'Спасибо за ваше мнение!<br>Протоколы с вашими результатами доступны<br>в вашем личном кабинете'\r\n\t\t},\r\n\r\n    uuid: '',\r\n\r\n\t\tactions: {\r\n\t\t\t'voting': ['twinpx:voting.form', 'voting'],\r\n\t\t\t'editVoting': ['twinpx:voting.form', 'editVoting'],\r\n\t\t},\r\n\r\n    loading: false,\r\n    error: '',\r\n  }),\r\n  actions: {\r\n    changeProp(prop, value) {\r\n      this[prop] = value;\r\n    },\r\n    runBitrixMethod(method, data, formData) {\r\n      if (!this.actions[method] || !Array.isArray(this.actions[method])) {\r\n        return Promise.reject({errors: [{message: `No such method ${method}`}]});\r\n      }\r\n\r\n      let payload;\r\n      \r\n      // Если есть formData, добавляем к нему customData и передаем как data\r\n      if (formData instanceof FormData) {\r\n        // Добавляем customData к FormData\r\n        Object.entries(this.customData).forEach(([key, value]) => {\r\n          if (value !== undefined && value !== null) {\r\n            formData.append(key, value);\r\n          }\r\n        });\r\n        payload = formData;\r\n      } else if (data) {\r\n        // Если есть data, объединяем с customData в объект\r\n        payload = {\r\n          ...this.customData,\r\n          ...data\r\n        };\r\n      } else {\r\n        // Если нет ни data, ни formData, передаем только customData\r\n        payload = this.customData;\r\n      }\r\n\r\n      return BX.ajax.runComponentAction(this.actions[method][0], this.actions[method][1], {\r\n        mode: 'class',\r\n        data: payload,\r\n        signedParameters: this.signedParameters,\r\n      })\r\n    }\r\n  }\r\n});\r\n","import { defineStore } from 'ui.vue3.pinia';\r\n\r\nexport const controlsStore = defineStore('controls', {\r\n  state: () => ({}),\r\n  actions: {\r\n    changeTextControlValue({ control, value }) {\r\n        control.value = value;\r\n    },\r\n    changeSelectRadioValue({ control, value }) {\r\n        control.value = value;\r\n    },\r\n    changeSelectDropdownValue({ control, value }) {\r\n        control.value = value;\r\n    },\r\n    changeDateValue({ control, value }) {\r\n        control.value = value;\r\n    },\r\n    changeFileValue({ control, value, file }) {\r\n        control.value = value;\r\n        control.file = file;\r\n        \r\n        if (value === '') {\r\n            control.file = ''\r\n        }\r\n    },\r\n    changeControlValue({ control, value, file, checked }) {\r\n        switch (control.property) {\r\n        case 'text':\r\n        case 'textarea':\r\n        case 'hint':\r\n        case 'tel':\r\n        case 'email':\r\n        case 'num':\r\n        case 'hidden':\r\n            this.changeTextControlValue({ control, value });\r\n            break;\r\n        case 'select':\r\n            this[\r\n            `changeSelect${control.type\r\n                .substring(0, 1)\r\n                .toUpperCase()}${control.type.substring(1).toLowerCase()}Value`\r\n            ]({ control, value });\r\n            break;\r\n        case 'file':\r\n            this.changeFileValue({ control, value, file });\r\n            break;\r\n        case 'date':\r\n            this.changeDateValue({ control, value });\r\n            break;\r\n        }\r\n    },\r\n    async runHints(control, action) {\r\n        const url = new URL(action, window.location.origin);\r\n        url.searchParams.append('s', control.value);\r\n\r\n        try {\r\n        // Создаем AbortController для возможности отмены запроса\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 20000); // 20 секунд таймаут\r\n\r\n        const response = await fetch(url, {\r\n            signal: controller.signal,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n\r\n        if (result.status === 'success' && result.data) {\r\n            this.setHints(control, result.data);\r\n        } else if (result.errors) {\r\n            this.error = result.errors[0]?.message\r\n        } else {\r\n            this.error = 'Invalid response format';\r\n        }\r\n        } catch (error) {\r\n        this.error = error?.message\r\n        }\r\n    },\r\n    setHints(control, value) {\r\n        control.hints = value;\r\n    },\r\n  }\r\n});","import '../css/status-timer.css'\r\n\r\nexport const StatusTimer = {\r\n    template: `\r\n        <div style=\"display: grid; gap: 16px; justify-items: flex-end;\">\r\n            <div class=\"twpx-voting-screen__state-0\">Подготовка</div>\r\n            \r\n            <div class=\"twpx-voting-screen__state-1\">\r\n                <div class=\"twpx-voting-screen__status\">Голосование идет</div>\r\n                <div class=\"twpx-voting-screen__timer\">01:54</div>\r\n            </div>\r\n            \r\n            <div class=\"twpx-voting-screen__state-2\">\r\n                <div class=\"twpx-voting-screen__status\">Закончено</div>\r\n                <div class=\"twpx-voting-screen__timer\">00:00</div>\r\n            </div>\r\n            \r\n            <div class=\"twpx-voting-screen__state-3\">Голосование в архиве</div>\r\n        </div>\r\n    `\r\n};","import '../css/graph-component.css'\r\n\r\nexport const GraphComponent = {\r\n    template: `\r\n        <div class=\"twpx-voting-screen-block twpx-voting-screen-graph\">\r\n            <div class=\"twpx-voting-screen-graph-item twpx-voting-screen-graph-item--voted\">\r\n                <div class=\"twpx-voting-screen-graph-item__rect\" style=\"height: 85%;\">\r\n                    <div class=\"twpx-voting-screen-graph-item__num\">85</div>\r\n                    <div class=\"twpx-voting-screen-graph-item__proc\">85%</div>\r\n                </div>\r\n                <div class=\"twpx-voting-screen-graph-item__text\">Проголосовали</div>\r\n            </div>\r\n            <div class=\"twpx-voting-screen-graph-item twpx-voting-screen-graph-item--not twpx-voting-screen-graph-item--zero\">\r\n                <div class=\"twpx-voting-screen-graph-item__rect\" style=\"height: 0%;\">\r\n                    <div class=\"twpx-voting-screen-graph-item__num\">0</div>\r\n                    <div class=\"twpx-voting-screen-graph-item__proc\">0%</div>\r\n                </div>\r\n                <div class=\"twpx-voting-screen-graph-item__text\">Не голосовали</div>\r\n            </div>\r\n        </div>\r\n    `\r\n};","import '../css/list-component.css'\r\n\r\nexport const ListComponent = {\r\n    template: `\r\n        <div class=\"twpx-voting-screen-block twpx-voting-screen-list twpx-voting-screen-list--lt10 twpx-voting-screen-list--successrty\">\r\n            <div class=\"twpx-voting-screen-list__items-wrapper\">\r\n                <div class=\"twpx-voting-screen-list__items\">\r\n                    <div class=\"twpx-voting-screen-list__item\">Иванов Алексей Петрович</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Смирнова Мария Васильевна</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Кузьмич Дмитрий Сергеевич</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Федорова Анна Николаевна</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Сергеев Алексей Александрович</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Михайлова Ольга Андреевна</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Сидорова Ольга Викторовна</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Иванов Алексей Петрович</div>\r\n                    <div class=\"twpx-voting-screen-list__item\">Смирнова Мария Васильевна</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"twpx-voting-screen-list__text\">Еще не голосовали</div>\r\n        </div>\r\n    `\r\n};","import '../css/answer-component.css'\r\n\r\nexport const AnswerComponent = {\r\n    props: ['answer'],\r\n    template: `\r\n      <div class=\"twpx-voting-answer\" @showeffect=\"showEffect()\">\r\n        <div class=\"twpx-voting-answer__title\">{{ answer.title }}</div>\r\n        <div class=\"twpx-voting-answer__graph twpx-graph\">\r\n          <div class=\"twpx-graph__wrapper\">\r\n            <div class=\"twpx-graph__img\"></div>\r\n            <div class=\"twpx-graph__num\">{{Number(answer.votes).toLocaleString()}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `,\r\n    methods: {\r\n      showEffect() {\r\n        const wrapper = this.$el.querySelector('.twpx-graph__img');\r\n        wrapper.style.width = 0;\r\n        setTimeout(() => {\r\n          wrapper.style.width = this.answer.percentage;\r\n        }, 0);\r\n      },\r\n    },\r\n};","import '../css/result-component.css'\r\nimport { AnswerComponent } from './answer-component';\r\n\r\nexport const ResultComponent = {\r\n    data() {\r\n        return {\r\n            result: [\r\n                {\r\n                    title: 'За',\r\n                    votes: '100',\r\n                    percentage: '100%'\r\n                },\r\n                {\r\n                    title: 'Против',\r\n                    votes: '50',\r\n                    percentage: '100%'\r\n                },\r\n                {\r\n                    title: 'Воздержался',\r\n                    votes: '10',\r\n                    percentage: '100%'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    components: {\r\n        AnswerComponent\r\n    },\r\n    template: `\r\n        <div class=\"twpx-voting-result\">\r\n            <AnswerComponent v-for=\"answer in result\" :answer=\"answer\" />\r\n        </div>\r\n    `,\r\n    methods: {\r\n        countPercentage() {\r\n            const biggest = this.result.reduce((b, a) => b > Number(a.votes) ? b : Number(a.votes), 0);\r\n            this.result.forEach(a => {\r\n                a.percentage = `${Number(a.votes) / biggest * 100}%`;\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.countPercentage();\r\n\r\n        setTimeout(() => {\r\n            this.$el.querySelectorAll('.twpx-voting-answer')\r\n                .forEach((answer) => {\r\n                    answer.dispatchEvent(new Event('showeffect'));\r\n                });\r\n        }, 0);\r\n        \r\n    }\r\n};","import '../css/application.css';\r\n\r\nimport { ControlChoice } from 'local.vue-components.control-choice';\r\nimport { ButtonComponent } from 'local.vue-components.button-component';\r\nimport { LoaderCircle } from 'local.vue-components.loader-circle';\r\nimport { MessageComponent } from 'local.vue-components.message-component';\r\n\r\nimport { mapState, mapActions } from 'ui.vue3.pinia';\r\nimport { dataStore } from '../stores/data.js';\r\nimport { controlsStore } from '../stores/controls.js';\r\n\r\nimport { StatusTimer } from './status-timer.js';\r\nimport { GraphComponent } from './graph-component.js';\r\nimport { ListComponent } from './list-component.js';\r\nimport { ResultComponent } from './result-component.js';\r\n\r\nexport const Application = {\r\n  data() {\r\n    return {};\r\n  },\r\n  components: {\r\n    ControlChoice,\r\n    ButtonComponent,\r\n    LoaderCircle,\r\n    MessageComponent,\r\n    StatusTimer,\r\n    GraphComponent,\r\n    ListComponent,\r\n    ResultComponent\r\n  },\r\n  // language=Vue\r\n  template: `\r\n    <div class=\"twpx-voting-screen\">\r\n      <div class=\"twpx-voting-screen-block twpx-voting-screen__header\">\r\n        <img src=\"assets/aas-logo.png\" alt=\"\" />\r\n        <StatusTimer />\r\n      </div>\r\n      <div class=\"twpx-voting-screen-block twpx-voting-screen__description\">\r\n        <div class=\"twpx-voting-screen__voting-name\">Голосование съезда</div>\r\n        <div class=\"twpx-voting-screen__question\">1.1.Определить заочную форму проведения общего территориального собрания членов СРО ААС по Приволжскому округу</div>\r\n      </div>\r\n\r\n      <div class=\"twpx-voting-screen__body\">\r\n        <div class=\"twpx-voting-screen-block twpx-voting-screen-app\">\r\n          <div class=\"twpx-voting-screen__body-title\">Используйте приложение<br>для голосования</div>\r\n          <div class=\"twpx-voting-screen__body-content\">\r\n            <div class=\"twpx-voting-screen__phone\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"twpx-voting-screen-block twpx-voting-screen-app\">\r\n          <div class=\"twpx-voting-screen__body-title\">Или отсканируйте QR</div>\r\n          <div class=\"twpx-voting-screen__body-content\">\r\n            <div class=\"twpx-voting-screen__phone\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"twpx-voting-screen__body\">\r\n        <GraphComponent />\r\n        <ListComponent />\r\n      </div>\r\n\r\n      <div class=\"twpx-voting-screen-block\">\r\n        <ResultComponent />\r\n        <div class=\"twpx-voting-screen__message\" v-html=\"lang.messageSuccess\"></div>\r\n      </div>\r\n      \r\n    </div>\r\n\t`,\r\n  computed: {\r\n    ...mapState(dataStore, [\r\n      'customData',\r\n      'signedParameters',\r\n      'actions',\r\n      'lang',\r\n      'uuid',\r\n\r\n      'loading',\r\n      'error',\r\n    ]),\r\n  },\r\n  methods: {\r\n    ...mapActions(dataStore, [\r\n      'runBitrixMethod',\r\n      'changeProp',\r\n    ]),\r\n    ...mapActions(controlsStore, [\r\n      'changeControlValue',\r\n      'runHints',\r\n      'setHints'\r\n    ]),\r\n    input(args) {\r\n      this.changeControlValue(args);\r\n    },\r\n    hints({ control, type, action, value }) {\r\n      if (type === 'get') {\r\n        this.runHints(control, action);\r\n      } else if (type === 'set') {\r\n        this.setHints(control, value);\r\n      }\r\n    },\r\n    async getVoting() {\r\n      this.changeProp('loading', true)\r\n      try {\r\n        const result = await this.runBitrixMethod('voting', {uuid: this.uuid})        \r\n        this.changeProp('loading', false)\r\n      } catch(error) {\r\n          this.changeProp('loading', false)\r\n          this.changeProp('error', error.errors[0].message)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getVoting();\r\n  }\r\n};\r\n","import { BitrixVue } from 'ui.vue3';\r\nimport { Application } from './components/application';\r\nimport { createPinia, setActivePinia } from 'ui.vue3.pinia';\r\nimport { dataStore } from './stores/data';\r\n\r\nexport class VotingScreen {\r\n  #store;\r\n  #rootNode;\r\n  #application;\r\n\r\n  constructor(rootNode, options) {\r\n    this.#store = createPinia();\r\n    this.#rootNode = document.querySelector(rootNode);\r\n    this.options = options;\r\n  }\r\n\r\n  run() {\r\n    const self = this;\r\n\r\n    this.#application = BitrixVue.createApp({\r\n      name: 'VotingScreen',\r\n      components: {\r\n        Application,\r\n      },\r\n      template: '<Application/>',\r\n      beforeMount() {\r\n        dataStore().customData = self.options.data || {};\r\n        dataStore().signedParameters = self.options.signedParameters || '';\r\n        dataStore().uuid = self.options.uuid || '';\r\n      },\r\n    });\r\n\r\n    this.#application.use(this.#store);\r\n    this.#application.mount(this.#rootNode);\r\n  }\r\n\r\n  initStorageBeforeStartApplication() {\r\n    setActivePinia(this.#store);\r\n  }\r\n\r\n  getFormStore() {\r\n    return formStore;\r\n  }\r\n}\r\n"],"names":["dataStore","defineStore","state","customData","signedParameters","lang","messageSuccess","uuid","actions","loading","error","changeProp","prop","value","runBitrixMethod","method","data","formData","Array","isArray","Promise","reject","errors","message","payload","FormData","Object","entries","forEach","key","undefined","append","BX","ajax","runComponentAction","mode","controlsStore","changeTextControlValue","control","changeSelectRadioValue","changeSelectDropdownValue","changeDateValue","changeFileValue","file","changeControlValue","checked","property","type","substring","toUpperCase","toLowerCase","runHints","action","url","URL","window","location","origin","searchParams","controller","AbortController","timeoutId","setTimeout","abort","fetch","signal","headers","response","clearTimeout","ok","Error","status","json","result","setHints","hints","StatusTimer","template","GraphComponent","ListComponent","AnswerComponent","props","methods","showEffect","wrapper","$el","querySelector","style","width","answer","percentage","ResultComponent","title","votes","components","countPercentage","biggest","reduce","b","a","Number","mounted","querySelectorAll","dispatchEvent","Event","Application","ControlChoice","ButtonComponent","LoaderCircle","MessageComponent","computed","mapState","mapActions","input","args","getVoting","VotingScreen","rootNode","options","createPinia","document","self","BitrixVue","createApp","name","beforeMount","use","mount","setActivePinia","formStore"],"mappings":"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"}